name: Xamarin.Forms

on:
  push:
    branches:
    - main

jobs:
  windows-build:
    runs-on: windows-latest
    env:
      Configuration: Debug
      Signing_Certificate: LancelotSoftwareLLC.pfx
      Telerik_Username: ${{ secrets.TELERIK_USERNAME }}
      Telerik_Password: ${{ secrets.TELERIK_PASSWORD }}
      NuGetConfig_Path: src\DevReach2020\nuget.config
      Solution_Path: src\DevReach2020\DevReach2020.Forms_UWPOnly.sln
      Project_Directory: src\DevReach2020\DevReach2020.Forms\UWP
      Project_Path: src\DevReach2020\DevReach2020.Forms\UWP\DevReach2020.Forms.UWP.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.1

    - name: NuGet Restore
      run: nuget restore src\DevReach2020 -ConfigFile src\DevReach2020\nuget.config

    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $certificatePath = Join-Path -Path $env:Project_Directory -ChildPath $env:Signing_Certificate
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    - name: Build UWP Project
      run: msbuild $env:Solution_Path /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle /p:PackageCertificateKeyFile=$env:Signing_Certificate /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}
      env:
        Appx_Bundle: Always
        Appx_Bundle_Platforms: x86
        Appx_Package_Build_Mode: StoreUpload

    - name: Remove the pfx
      run: Remove-Item -path $env:Project_Directory\$env:Signing_Certificate

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: UWP Artifacts
        path: ${{ env.Project_Directory }}\AppPackages

  android-build:
    runs-on: macos-latest
    env:
      Configuration: Debug
      Signing_Certificate: LancelotSoftwareLLC.pfx
      Telerik_Username: ${{ secrets.TELERIK_USERNAME }}
      Telerik_Password: ${{ secrets.TELERIK_PASSWORD }}
      NuGetConfig_Path: src\DevReach2020\nuget.config
      Solution_Directory: src\DevReach2020
      Solution_Path: src\DevReach2020\DevReach2020.Forms_AndroidOnly.sln
      Project_Directory: src\DevReach2020\DevReach2020.Forms\Android
      Project_Path: src\DevReach2020\DevReach2020.Forms\Android\DevReach2020.Forms.Android.csproj
      
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  
    
    - name: NuGet Restore
      run: nuget restore src\DevReach2020 -ConfigFile src\DevReach2020\nuget.config
    
    - name: Build Android Project
      run: msbuild src\DevReach2020\DevReach2020.Forms\Android\DevReach2020.Forms.Android.csproj /p:SolutionDir=src\DevReach2020 /p:Configuration=Debug /p:Platform="AnyCPU" /verbosity:normal /t:Rebuild

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Android Artifacts
        path: ${{ env.Project_Directory }}\bin

  ios-build:
    runs-on: macos-latest
    env:
      Configuration: Debug
      Telerik_Username: ${{ secrets.TELERIK_USERNAME }}
      Telerik_Password: ${{ secrets.TELERIK_PASSWORD }}
      NuGetConfig_Path: src\DevReach2020\nuget.config
      Solution_Directory: src\DevReach2020
      Solution_Path: src\DevReach2020\DevReach2020.Forms_iOSOnly.sln
      Project_Directory: src\DevReach2020\DevReach2020.Forms\iOS
      Project_Path: src\DevReach2020\DevReach2020.Forms\iOS\DevReach2020.Forms.iOS.csproj 

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  
    
    - name: Restore NuGet packages
      run: nuget restore src\DevReach2020\DevReach2020.Forms_iOSOnly.sln -ConfigFile src\DevReach2020\nuget.config
    
    - name: Build iOS Project
      run: msbuild src\DevReach2020\DevReach2020.Forms\iOS\DevReach2020.Forms.iOS.csproj  /p:SolutionDir=src\DevReach2020 /p:Configuration=Debug /p:Platform=iPhoneSimulator /verbosity:normal /t:Rebuild

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: iOS Artifacts
        path: ${{ env.Project_Directory }}\bin
