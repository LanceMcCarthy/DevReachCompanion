name: CD (iOS)

on:
  push:
    branches:
    - appcenter
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'

jobs:
  # iOS Job
  ios-build:
    runs-on: macos-latest
    steps:
    # AppCenter release to TestFlight's BetaTesters group
    - name: AppCenter Build and Release
      run: |
        npm install -g appcenter-cli
        appcenter build queue --app "lance-mccarthy-1uw5/devreach-2020-ios" --branch "appcenter" --token ${{ secrets.APPCENTER_API_TOKEN }}
  
  # Android Job
  android-build:
    runs-on: windows-latest
    steps:
    # AppCenter release to Google Play Beta rollout
    - name: AppCenter Build and Release
      run: |
        npm install -g appcenter-cli
        appcenter build queue --app "lance-mccarthy-1uw5/devreach-2020-android" --branch "appcenter" --token ${{ secrets.APPCENTER_API_TOKEN }}
        
  # UWP Job
  windows-build:
    runs-on: windows-latest
    env:
      Configuration: Release
      Platform: "x64"
      AppxBundlePlatforms: "x64"
      AppxBundle: Always
      Signing_Certificate: LancelotSoftwareLLC.pfx
      TELERIK_USERNAME: ${{ secrets.TELERIK_ACCOUNT_USERNAME }}
      TELERIK_PASSWORD: ${{ secrets.TELERIK_ACCOUNT_PASSWORD }}
      NuGetConfig_Path: src\DevReach2020\nuget.config
      Solution_Path: src\DevReach2020\DevReach2020.Forms_UWPOnly.sln
      Project_Directory: src\DevReach2020\DevReach2020.Forms\UWP
      Project_Path: src\DevReach2020\DevReach2020.Forms\UWP\DevReach2020.Forms.UWP.csproj

    steps:
    # AppCenter release to AppCenter's Collaborators and Testers groups
    - name: AppCenter Build and Release
      run: |
        npm install -g appcenter-cli
        appcenter build queue --app "lance-mccarthy-1uw5/devreach-2020-uwp" --branch "appcenter" --token ${{ secrets.APPCENTER_API_TOKEN }}

    # ******* BONUS! Everything under here shows how you can distribbute your Windows 10 app with your own website via AppInstaller! ********** #
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Configure Pagefile (increase RAM)
      uses: al-cheb/configure-pagefile-action@v1.2
      with:
        minimum-size: 32GB
        maximum-size: 32GB
        disk-root: "C:"
    
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    - name: NuGet Restore
      run: nuget restore ${{ env.Solution_Path }} -ConfigFile ${{ env.NuGetConfig_Path }}
    
    - name: Update manifest version
      run: |
        [xml]$manifest = get-content "src\DevReach2020\DevReach2020.Forms\UWP\Package.appxmanifest"
        $manifest.Package.Identity.Publisher = "CN='Lancelot Software, LLC', O='Lancelot Software, LLC', L=NORTH BILLERICA, S=Massachusetts, C=US"
        $manifest.Package.Properties.DisplayName = "DevReach Companion"
        $manifest.Package.Properties.PublisherDisplayName = "Lancelot Software"
        $manifest.Package.Applications.Application.VisualElements.DisplayName = "DevReach Companion"
        $manifest.save("src\DevReach2020\DevReach2020.Forms\UWP\Package.appxmanifest")
    
    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $certificatePath = Join-Path -Path $env:Project_Directory -ChildPath $env:Signing_Certificate
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    - name: Build UWP Project
      run: msbuild $env:Solution_Path /p:Platform=$env:Platform /p:AppxBundlePlatforms=$env:AppxBundlePlatforms /p:GenerateAppInstallerFile=$env:GenerateAppInstaller /p:AppInstallerUri=$env:AppInstallerUri /p:HoursBetweenUpdateChecks=$env:HoursBetweenUpdateChecks /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:AppxPackageBuildMode /p:AppxBundle=$env:AppxBundle /p:PackageCertificateKeyFile=$env:Signing_Certificate /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}
      env:
        AppxPackageBuildMode: SideloadOnly
        GenerateAppInstaller: true
        HoursBetweenUpdateChecks: 24
        AppInstallerUri: https://dvlup.blob.core.windows.net/general-app-files/Installers/DevReachCompanion/
    
    - name: Remove the pfx
      run: Remove-Item -path $env:Project_Directory\$env:Signing_Certificate

    - name: Upload AppInstaller and website to Azure Storage
      uses: LanceMcCarthy/Action-AzureBlobUpload@v1.7
      with:
        connection_string: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
        container_name: general-app-files
        source_folder: ${{ env.Project_Directory }}\AppPackages\
        destination_folder: Installers/DevReachCompanion
        clean_destination_folder: true

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: UWP_Sideload_Artifacts
        path: ${{ env.Project_Directory }}\AppPackages\